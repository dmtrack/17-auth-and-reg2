{"ast":null,"code":"var _jsxFileName = \"/Users/dmtrack/Documents/JS/Module 2 React/17 {auth and reg 2}/src/app/components/ui/registerForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useQualities } from \"../../hooks/useQualities\";\nimport { useProfessions } from \"../../hooks/useProfession\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = () => {\n  _s();\n\n  const history = useHistory();\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n    profession: \"\",\n    sex: \"male\",\n    name: \"\",\n    qualities: [],\n    licence: false\n  });\n  const {\n    signUp\n  } = useAuth();\n  const {\n    qualities\n  } = useQualities();\n  const qualitiesList = qualities.map(q => ({\n    label: q.name,\n    value: q._id\n  }));\n  const {\n    professions\n  } = useProfessions();\n  const professionsList = professions.map(p => ({\n    label: p.name,\n    value: p._id\n  }));\n  const [errors, setErrors] = useState({});\n\n  const handleChange = target => {\n    setData(prevState => ({ ...prevState,\n      [target.name]: target.value\n    }));\n  };\n\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\"\n      },\n      isEmail: {\n        message: \"Email введен некорректно\"\n      }\n    },\n    name: {\n      isRequired: {\n        message: \"Имя обязательно для заполнения\"\n      },\n      min: {\n        message: \"Имя должно состоять минимум из 3 символов\",\n        value: 3\n      }\n    },\n    password: {\n      isRequired: {\n        message: \"Пароль обязателен для заполнения\"\n      },\n      isCapitalSymbol: {\n        message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n      },\n      isContainDigit: {\n        message: \"Пароль должен содержать хотя бы одно число\"\n      },\n      min: {\n        message: \"Пароль должен состоять минимум из 8 символов\",\n        value: 8\n      }\n    },\n    profession: {\n      isRequired: {\n        message: \"Обязательно выберите вашу профессию\"\n      }\n    },\n    licence: {\n      isRequired: {\n        message: \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\n      }\n    }\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const isValid = Object.keys(errors).length === 0;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    const newData = { ...data,\n      qualities: data.qualities.map(q => q.value)\n    };\n\n    try {\n      await signUp(newData);\n      history.push(\"/\");\n    } catch (error) {\n      setErrors(error);\n    }\n  };\n\n  console.log(professionsList);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\",\n      name: \"email\",\n      value: data.email,\n      onChange: handleChange,\n      error: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u0418\\u043C\\u044F\",\n      name: \"name\",\n      value: data.name,\n      onChange: handleChange,\n      error: errors.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      type: \"password\",\n      name: \"password\",\n      value: data.password,\n      onChange: handleChange,\n      error: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0441\\u0432\\u043E\\u044E \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044E\",\n      defaultOption: \"Choose...\",\n      options: professionsList,\n      name: \"profession\",\n      onChange: handleChange,\n      value: data.profession,\n      error: errors.profession\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RadioField, {\n      options: [{\n        name: \"Male\",\n        value: \"male\"\n      }, {\n        name: \"Female\",\n        value: \"female\"\n      }, {\n        name: \"Other\",\n        value: \"other\"\n      }],\n      value: data.sex,\n      name: \"sex\",\n      onChange: handleChange,\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043F\\u043E\\u043B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MultiSelectField, {\n      options: qualitiesList,\n      onChange: handleChange,\n      defaultValue: data.qualities,\n      name: \"qualities\",\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0438 \\u043A\\u0430\\u0447\\u0435\\u0441\\u0442\\u0432\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CheckBoxField, {\n      value: data.licence,\n      onChange: handleChange,\n      name: \"licence\",\n      error: errors.licence,\n      children: [\"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C \", /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"\\u043B\\u0438\\u0446\\u0435\\u043D\\u0437\\u0438\\u043E\\u043D\\u043D\\u043E\\u0435 \\u0441\\u043E\\u0433\\u043B\\u0430\\u0448\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary w-100 mx-auto\",\n      type: \"submit\",\n      disabled: !isValid,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterForm, \"okjafjd3nWHtPFEjOJd+cF8j5Zw=\", false, function () {\n  return [useHistory, useAuth, useQualities, useProfessions];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/dmtrack/Documents/JS/Module 2 React/17 {auth and reg 2}/src/app/components/ui/registerForm.jsx"],"names":["React","useEffect","useState","validator","TextField","SelectField","RadioField","MultiSelectField","CheckBoxField","useQualities","useProfessions","useAuth","useHistory","RegisterForm","history","data","setData","email","password","profession","sex","name","qualities","licence","signUp","qualitiesList","map","q","label","value","_id","professions","professionsList","p","errors","setErrors","handleChange","target","prevState","validatorConfig","isRequired","message","isEmail","min","isCapitalSymbol","isContainDigit","validate","Object","keys","length","isValid","handleSubmit","e","preventDefault","newData","push","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,OAAO,GAAGF,UAAU,EAA1B;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC;AAC/Be,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,QAAQ,EAAE,EAFqB;AAG/BC,IAAAA,UAAU,EAAE,EAHmB;AAI/BC,IAAAA,GAAG,EAAE,MAJ0B;AAK/BC,IAAAA,IAAI,EAAE,EALyB;AAM/BC,IAAAA,SAAS,EAAE,EANoB;AAO/BC,IAAAA,OAAO,EAAE;AAPsB,GAAD,CAAhC;AASA,QAAM;AAAEC,IAAAA;AAAF,MAAab,OAAO,EAA1B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAgBb,YAAY,EAAlC;AACA,QAAMgB,aAAa,GAAGH,SAAS,CAACI,GAAV,CAAeC,CAAD,KAAQ;AAC1CC,IAAAA,KAAK,EAAED,CAAC,CAACN,IADiC;AAE1CQ,IAAAA,KAAK,EAAEF,CAAC,CAACG;AAFiC,GAAR,CAAd,CAAtB;AAIA,QAAM;AAAEC,IAAAA;AAAF,MAAkBrB,cAAc,EAAtC;AACA,QAAMsB,eAAe,GAAGD,WAAW,CAACL,GAAZ,CAAiBO,CAAD,KAAQ;AAC9CL,IAAAA,KAAK,EAAEK,CAAC,CAACZ,IADqC;AAE9CQ,IAAAA,KAAK,EAAEI,CAAC,CAACH;AAFqC,GAAR,CAAhB,CAAxB;AAIA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBjC,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMkC,YAAY,GAAIC,MAAD,IAAY;AAC/BrB,IAAAA,OAAO,CAAEsB,SAAD,KAAgB,EACtB,GAAGA,SADmB;AAEtB,OAACD,MAAM,CAAChB,IAAR,GAAegB,MAAM,CAACR;AAFA,KAAhB,CAAD,CAAP;AAID,GALD;;AAMA,QAAMU,eAAe,GAAG;AACtBtB,IAAAA,KAAK,EAAE;AACLuB,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE;AADC,OADP;AAILC,MAAAA,OAAO,EAAE;AACPD,QAAAA,OAAO,EAAE;AADF;AAJJ,KADe;AAStBpB,IAAAA,IAAI,EAAE;AACJmB,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE;AADC,OADR;AAIJE,MAAAA,GAAG,EAAE;AACHF,QAAAA,OAAO,EAAE,2CADN;AAEHZ,QAAAA,KAAK,EAAE;AAFJ;AAJD,KATgB;AAkBtBX,IAAAA,QAAQ,EAAE;AACRsB,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE;AADC,OADJ;AAIRG,MAAAA,eAAe,EAAE;AACfH,QAAAA,OAAO,EAAE;AADM,OAJT;AAORI,MAAAA,cAAc,EAAE;AACdJ,QAAAA,OAAO,EAAE;AADK,OAPR;AAURE,MAAAA,GAAG,EAAE;AACHF,QAAAA,OAAO,EAAE,8CADN;AAEHZ,QAAAA,KAAK,EAAE;AAFJ;AAVG,KAlBY;AAiCtBV,IAAAA,UAAU,EAAE;AACVqB,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE;AADC;AADF,KAjCU;AAsCtBlB,IAAAA,OAAO,EAAE;AACPiB,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EACL;AAFQ;AADL;AAtCa,GAAxB;AA6CAxC,EAAAA,SAAS,CAAC,MAAM;AACd6C,IAAAA,QAAQ;AACT,GAFQ,EAEN,CAAC/B,IAAD,CAFM,CAAT;;AAGA,QAAM+B,QAAQ,GAAG,MAAM;AACrB,UAAMZ,MAAM,GAAG/B,SAAS,CAACY,IAAD,EAAOwB,eAAP,CAAxB;AACAJ,IAAAA,SAAS,CAACD,MAAD,CAAT;AACA,WAAOa,MAAM,CAACC,IAAP,CAAYd,MAAZ,EAAoBe,MAApB,KAA+B,CAAtC;AACD,GAJD;;AAKA,QAAMC,OAAO,GAAGH,MAAM,CAACC,IAAP,CAAYd,MAAZ,EAAoBe,MAApB,KAA+B,CAA/C;;AAEA,QAAME,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMH,OAAO,GAAGJ,QAAQ,EAAxB;AACA,QAAI,CAACI,OAAL,EAAc;AACd,UAAMI,OAAO,GAAG,EACd,GAAGvC,IADW;AAEdO,MAAAA,SAAS,EAAEP,IAAI,CAACO,SAAL,CAAeI,GAAf,CAAoBC,CAAD,IAAOA,CAAC,CAACE,KAA5B;AAFG,KAAhB;;AAKA,QAAI;AACF,YAAML,MAAM,CAAC8B,OAAD,CAAZ;AACAxC,MAAAA,OAAO,CAACyC,IAAR,CAAa,GAAb;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdrB,MAAAA,SAAS,CAACqB,KAAD,CAAT;AACD;AACF,GAfD;;AAgBAC,EAAAA,OAAO,CAACC,GAAR,CAAY1B,eAAZ;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAEmB,YAAhB;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,KAAK,EAAC,mGADR;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAEpC,IAAI,CAACE,KAHd;AAIE,MAAA,QAAQ,EAAEmB,YAJZ;AAKE,MAAA,KAAK,EAAEF,MAAM,CAACjB;AALhB;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,SAAD;AACE,MAAA,KAAK,EAAC,oBADR;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAEF,IAAI,CAACM,IAHd;AAIE,MAAA,QAAQ,EAAEe,YAJZ;AAKE,MAAA,KAAK,EAAEF,MAAM,CAACb;AALhB;AAAA;AAAA;AAAA;AAAA,YARF,eAeE,QAAC,SAAD;AACE,MAAA,KAAK,EAAC,sCADR;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,KAAK,EAAEN,IAAI,CAACG,QAJd;AAKE,MAAA,QAAQ,EAAEkB,YALZ;AAME,MAAA,KAAK,EAAEF,MAAM,CAAChB;AANhB;AAAA;AAAA;AAAA;AAAA,YAfF,eAuBE,QAAC,WAAD;AACE,MAAA,KAAK,EAAC,sHADR;AAEE,MAAA,aAAa,EAAC,WAFhB;AAGE,MAAA,OAAO,EAAEc,eAHX;AAIE,MAAA,IAAI,EAAC,YAJP;AAKE,MAAA,QAAQ,EAAEI,YALZ;AAME,MAAA,KAAK,EAAErB,IAAI,CAACI,UANd;AAOE,MAAA,KAAK,EAAEe,MAAM,CAACf;AAPhB;AAAA;AAAA;AAAA;AAAA,YAvBF,eAgCE,QAAC,UAAD;AACE,MAAA,OAAO,EAAE,CACP;AAAEE,QAAAA,IAAI,EAAE,MAAR;AAAgBQ,QAAAA,KAAK,EAAE;AAAvB,OADO,EAEP;AAAER,QAAAA,IAAI,EAAE,QAAR;AAAkBQ,QAAAA,KAAK,EAAE;AAAzB,OAFO,EAGP;AAAER,QAAAA,IAAI,EAAE,OAAR;AAAiBQ,QAAAA,KAAK,EAAE;AAAxB,OAHO,CADX;AAME,MAAA,KAAK,EAAEd,IAAI,CAACK,GANd;AAOE,MAAA,IAAI,EAAC,KAPP;AAQE,MAAA,QAAQ,EAAEgB,YARZ;AASE,MAAA,KAAK,EAAC;AATR;AAAA;AAAA;AAAA;AAAA,YAhCF,eA2CE,QAAC,gBAAD;AACE,MAAA,OAAO,EAAEX,aADX;AAEE,MAAA,QAAQ,EAAEW,YAFZ;AAGE,MAAA,YAAY,EAAErB,IAAI,CAACO,SAHrB;AAIE,MAAA,IAAI,EAAC,WAJP;AAKE,MAAA,KAAK,EAAC;AALR;AAAA;AAAA;AAAA;AAAA,YA3CF,eAkDE,QAAC,aAAD;AACE,MAAA,KAAK,EAAEP,IAAI,CAACQ,OADd;AAEE,MAAA,QAAQ,EAAEa,YAFZ;AAGE,MAAA,IAAI,EAAC,SAHP;AAIE,MAAA,KAAK,EAAEF,MAAM,CAACX,OAJhB;AAAA,qGAMc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANd;AAAA;AAAA;AAAA;AAAA;AAAA,YAlDF,eA0DE;AACE,MAAA,SAAS,EAAC,+BADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,QAAQ,EAAE,CAAC2B,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1DF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoED,CA3KD;;GAAMrC,Y;UACYD,U,EAUGD,O,EACGF,Y,EAKEC,c;;;KAjBpBG,Y;AA6KN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useQualities } from \"../../hooks/useQualities\";\nimport { useProfessions } from \"../../hooks/useProfession\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst RegisterForm = () => {\n  const history = useHistory();\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n    profession: \"\",\n    sex: \"male\",\n    name: \"\",\n    qualities: [],\n    licence: false,\n  });\n  const { signUp } = useAuth();\n  const { qualities } = useQualities();\n  const qualitiesList = qualities.map((q) => ({\n    label: q.name,\n    value: q._id,\n  }));\n  const { professions } = useProfessions();\n  const professionsList = professions.map((p) => ({\n    label: p.name,\n    value: p._id,\n  }));\n  const [errors, setErrors] = useState({});\n\n  const handleChange = (target) => {\n    setData((prevState) => ({\n      ...prevState,\n      [target.name]: target.value,\n    }));\n  };\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\",\n      },\n      isEmail: {\n        message: \"Email введен некорректно\",\n      },\n    },\n    name: {\n      isRequired: {\n        message: \"Имя обязательно для заполнения\",\n      },\n      min: {\n        message: \"Имя должно состоять минимум из 3 символов\",\n        value: 3,\n      },\n    },\n    password: {\n      isRequired: {\n        message: \"Пароль обязателен для заполнения\",\n      },\n      isCapitalSymbol: {\n        message: \"Пароль должен содержать хотя бы одну заглавную букву\",\n      },\n      isContainDigit: {\n        message: \"Пароль должен содержать хотя бы одно число\",\n      },\n      min: {\n        message: \"Пароль должен состоять минимум из 8 символов\",\n        value: 8,\n      },\n    },\n    profession: {\n      isRequired: {\n        message: \"Обязательно выберите вашу профессию\",\n      },\n    },\n    licence: {\n      isRequired: {\n        message:\n          \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\",\n      },\n    },\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const isValid = Object.keys(errors).length === 0;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    const newData = {\n      ...data,\n      qualities: data.qualities.map((q) => q.value),\n    };\n\n    try {\n      await signUp(newData);\n      history.push(\"/\");\n    } catch (error) {\n      setErrors(error);\n    }\n  };\n  console.log(professionsList);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        label=\"Электронная почта\"\n        name=\"email\"\n        value={data.email}\n        onChange={handleChange}\n        error={errors.email}\n      />\n      <TextField\n        label=\"Имя\"\n        name=\"name\"\n        value={data.name}\n        onChange={handleChange}\n        error={errors.name}\n      />\n      <TextField\n        label=\"Пароль\"\n        type=\"password\"\n        name=\"password\"\n        value={data.password}\n        onChange={handleChange}\n        error={errors.password}\n      />\n      <SelectField\n        label=\"Выбери свою профессию\"\n        defaultOption=\"Choose...\"\n        options={professionsList}\n        name=\"profession\"\n        onChange={handleChange}\n        value={data.profession}\n        error={errors.profession}\n      />\n      <RadioField\n        options={[\n          { name: \"Male\", value: \"male\" },\n          { name: \"Female\", value: \"female\" },\n          { name: \"Other\", value: \"other\" },\n        ]}\n        value={data.sex}\n        name=\"sex\"\n        onChange={handleChange}\n        label=\"Выберите ваш пол\"\n      />\n      <MultiSelectField\n        options={qualitiesList}\n        onChange={handleChange}\n        defaultValue={data.qualities}\n        name=\"qualities\"\n        label=\"Выберите ваши качества\"\n      />\n      <CheckBoxField\n        value={data.licence}\n        onChange={handleChange}\n        name=\"licence\"\n        error={errors.licence}\n      >\n        Подтвердить <a>лицензионное соглашение</a>\n      </CheckBoxField>\n      <button\n        className=\"btn btn-primary w-100 mx-auto\"\n        type=\"submit\"\n        disabled={!isValid}\n      >\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}