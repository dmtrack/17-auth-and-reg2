{"ast":null,"code":"var _jsxFileName = \"/Users/dmtrack/Documents/JS/Module 2 React/17 {auth and reg 2}/src/app/hooks/useProfession.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ProfessionService from \"../services/profession.service\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfessionContext = /*#__PURE__*/React.createContext();\nexport const useProfessions = () => {\n  _s();\n\n  return useContext(ProfessionContext);\n};\n\n_s(useProfessions, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const ProfessionProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [isLoading, setLoading] = useState(true);\n  const [professions, setProfessions] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (error !== null) {\n      toast(error);\n      setError(null);\n    }\n  }, [error]);\n  useEffect(() => {\n    getProfessionsList();\n  }, []);\n\n  function errorCatcher(error) {\n    const {\n      message\n    } = error.response.data;\n    setError(message);\n  }\n\n  function getProfession(id) {\n    return professions.find(p => p._id === id);\n  }\n\n  async function getProfessionsList() {\n    try {\n      const {\n        content\n      } = await ProfessionService.get();\n      setProfessions(content);\n      setLoading(false);\n    } catch (error) {\n      errorCatcher(error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(ProfessionContext.Provider, {\n    value: {\n      isLoading,\n      professions,\n      getProfession\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ProfessionProvider, \"eQj5bvGBQ6guH0k/LbzDF8DHNJw=\");\n\n_c = ProfessionProvider;\nProfessionProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfessionProvider\");","map":{"version":3,"sources":["/Users/dmtrack/Documents/JS/Module 2 React/17 {auth and reg 2}/src/app/hooks/useProfession.jsx"],"names":["React","useContext","useEffect","useState","PropTypes","ProfessionService","toast","ProfessionContext","createContext","useProfessions","ProfessionProvider","children","isLoading","setLoading","professions","setProfessions","error","setError","getProfessionsList","errorCatcher","message","response","data","getProfession","id","find","p","_id","content","get","propTypes","oneOfType","arrayOf","node"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,MAAMC,iBAAiB,gBAAGP,KAAK,CAACQ,aAAN,EAA1B;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAClC,SAAOR,UAAU,CAACM,iBAAD,CAAjB;AACD,CAFM;;GAAME,c;;AAIb,OAAO,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAClD,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,KAAK,KAAK,IAAd,EAAoB;AAClBV,MAAAA,KAAK,CAACU,KAAD,CAAL;AACAC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GALQ,EAKN,CAACD,KAAD,CALM,CAAT;AAOAd,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,kBAAkB;AACnB,GAFQ,EAEN,EAFM,CAAT;;AAGA,WAASC,YAAT,CAAsBH,KAAtB,EAA6B;AAC3B,UAAM;AAAEI,MAAAA;AAAF,QAAcJ,KAAK,CAACK,QAAN,CAAeC,IAAnC;AACAL,IAAAA,QAAQ,CAACG,OAAD,CAAR;AACD;;AACD,WAASG,aAAT,CAAuBC,EAAvB,EAA2B;AACzB,WAAOV,WAAW,CAACW,IAAZ,CAAkBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUH,EAAlC,CAAP;AACD;;AAED,iBAAeN,kBAAf,GAAoC;AAClC,QAAI;AACF,YAAM;AAAEU,QAAAA;AAAF,UAAc,MAAMvB,iBAAiB,CAACwB,GAAlB,EAA1B;AACAd,MAAAA,cAAc,CAACa,OAAD,CAAd;AACAf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAJD,CAIE,OAAOG,KAAP,EAAc;AACdG,MAAAA,YAAY,CAACH,KAAD,CAAZ;AACD;AACF;;AAED,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AAAEJ,MAAAA,SAAF;AAAaE,MAAAA,WAAb;AAA0BS,MAAAA;AAA1B,KADT;AAAA,cAGGZ;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAvCM;;IAAMD,kB;;KAAAA,kB;AAyCbA,kBAAkB,CAACoB,SAAnB,GAA+B;AAC7BnB,EAAAA,QAAQ,EAAEP,SAAS,CAAC2B,SAAV,CAAoB,CAC5B3B,SAAS,CAAC4B,OAAV,CAAkB5B,SAAS,CAAC6B,IAA5B,CAD4B,EAE5B7B,SAAS,CAAC6B,IAFkB,CAApB;AADmB,CAA/B","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ProfessionService from \"../services/profession.service\";\nimport { toast } from \"react-toastify\";\n\nconst ProfessionContext = React.createContext();\n\nexport const useProfessions = () => {\n  return useContext(ProfessionContext);\n};\n\nexport const ProfessionProvider = ({ children }) => {\n  const [isLoading, setLoading] = useState(true);\n  const [professions, setProfessions] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (error !== null) {\n      toast(error);\n      setError(null);\n    }\n  }, [error]);\n\n  useEffect(() => {\n    getProfessionsList();\n  }, []);\n  function errorCatcher(error) {\n    const { message } = error.response.data;\n    setError(message);\n  }\n  function getProfession(id) {\n    return professions.find((p) => p._id === id);\n  }\n\n  async function getProfessionsList() {\n    try {\n      const { content } = await ProfessionService.get();\n      setProfessions(content);\n      setLoading(false);\n    } catch (error) {\n      errorCatcher(error);\n    }\n  }\n\n  return (\n    <ProfessionContext.Provider\n      value={{ isLoading, professions, getProfession }}\n    >\n      {children}\n    </ProfessionContext.Provider>\n  );\n};\n\nProfessionProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n"]},"metadata":{},"sourceType":"module"}