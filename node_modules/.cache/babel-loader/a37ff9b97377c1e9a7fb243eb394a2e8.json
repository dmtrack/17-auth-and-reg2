{"ast":null,"code":"var _jsxFileName = \"/Users/dmtrack/Documents/JS/Module 2 React/17 {auth and reg 2}/src/app/components/page/editUserPage/editUserPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { validator } from \"../../../utils/validator\";\nimport api from \"../../../api\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\nimport RadioField from \"../../common/form/radioField\";\nimport MultiSelectField from \"../../common/form/multiSelectField\";\nimport BackHistoryButton from \"../../common/backButton\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport { useProfessions } from \"../../../hooks/useProfession\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditUserPage = () => {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const {\n    currentUser\n  } = useAuth();\n  console.log(currentUser);\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    profession: \"\",\n    sex: \"male\",\n    qualities: []\n  }); // const [professions, setProfession] = useState([]);\n\n  const {\n    professions\n  } = useProfessions();\n  console.log(professions);\n  const [qualities, setQualities] = useState([]);\n  const [errors, setErrors] = useState({});\n\n  const getProfessionById = id => {\n    for (const prof of professions) {\n      if (prof.value === id) {\n        return {\n          _id: prof.value,\n          name: prof.label\n        };\n      }\n    }\n  };\n\n  const getQualities = elements => {\n    const qualitiesArray = [];\n\n    for (const elem of elements) {\n      for (const quality in qualities) {\n        if (elem.value === qualities[quality].value) {\n          qualitiesArray.push({\n            _id: qualities[quality].value,\n            name: qualities[quality].label,\n            color: qualities[quality].color\n          });\n        }\n      }\n    }\n\n    return qualitiesArray;\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    const {\n      profession,\n      qualities\n    } = data;\n    api.users.update(userId, { ...data,\n      profession: getProfessionById(profession),\n      qualities: getQualities(qualities)\n    }).then(data => history.push(`/users/${data._id}`));\n    console.log({ ...data,\n      profession: getProfessionById(profession),\n      qualities: getQualities(qualities)\n    });\n  };\n\n  const transformData = data => {\n    return data.map(qual => ({\n      label: qual.name,\n      value: qual._id\n    }));\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    api.users.getById(userId).then(({\n      profession,\n      qualities,\n      ...data\n    }) => setData(prevState => ({ ...prevState,\n      ...data,\n      qualities: transformData(qualities),\n      profession: profession._id\n    })));\n    api.professions.fetchAll().then(data => {\n      const professionsList = Object.keys(data).map(professionName => ({\n        label: data[professionName].name,\n        value: data[professionName]._id\n      }));\n      setProfession(professionsList);\n    });\n    api.qualities.fetchAll().then(data => {\n      const qualitiesList = Object.keys(data).map(optionName => ({\n        value: data[optionName]._id,\n        label: data[optionName].name,\n        color: data[optionName].color\n      }));\n      setQualities(qualitiesList);\n    });\n  }, []);\n  useEffect(() => {\n    if (data._id) setIsLoading(false);\n  }, [data]);\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\"\n      },\n      isEmail: {\n        message: \"Email введен некорректно\"\n      }\n    },\n    name: {\n      isRequired: {\n        message: \"Введите ваше имя\"\n      }\n    }\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n\n  const handleChange = target => {\n    setData(prevState => ({ ...prevState,\n      [target.name]: target.value\n    }));\n  };\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const isValid = Object.keys(errors).length === 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(BackHistoryButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-md-3 shadow p-4\",\n        children: !isLoading && Object.keys(professions).length > 0 ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u0418\\u043C\\u044F\",\n            name: \"name\",\n            value: data.name,\n            onChange: handleChange,\n            error: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\",\n            name: \"email\",\n            value: data.email,\n            onChange: handleChange,\n            error: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n            label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0441\\u0432\\u043E\\u044E \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044E\",\n            defaultOption: \"Choose...\",\n            options: professions,\n            name: \"profession\",\n            onChange: handleChange,\n            value: data.profession,\n            error: errors.profession\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RadioField, {\n            options: [{\n              name: \"Male\",\n              value: \"male\"\n            }, {\n              name: \"Female\",\n              value: \"female\"\n            }, {\n              name: \"Other\",\n              value: \"other\"\n            }],\n            value: data.sex,\n            name: \"sex\",\n            onChange: handleChange,\n            label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043F\\u043E\\u043B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MultiSelectField, {\n            defaultValue: data.qualities,\n            options: qualities,\n            onChange: handleChange,\n            name: \"qualities\",\n            label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0438 \\u043A\\u0430\\u0447\\u0435\\u0441\\u0442\\u0432\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !isValid,\n            className: \"btn btn-primary w-100 mx-auto\",\n            children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this) : \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditUserPage, \"0e9qdjF4N6OFP7xxD6VTXP6sDQU=\", false, function () {\n  return [useParams, useAuth, useHistory, useProfessions];\n});\n\n_c = EditUserPage;\nexport default EditUserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUserPage\");","map":{"version":3,"sources":["/Users/dmtrack/Documents/JS/Module 2 React/17 {auth and reg 2}/src/app/components/page/editUserPage/editUserPage.jsx"],"names":["React","useEffect","useState","useHistory","useParams","validator","api","TextField","SelectField","RadioField","MultiSelectField","BackHistoryButton","useAuth","useProfessions","EditUserPage","userId","currentUser","console","log","history","isLoading","setIsLoading","data","setData","name","email","profession","sex","qualities","professions","setQualities","errors","setErrors","getProfessionById","id","prof","value","_id","label","getQualities","elements","qualitiesArray","elem","quality","push","color","handleSubmit","e","preventDefault","isValid","validate","users","update","then","transformData","map","qual","getById","prevState","fetchAll","professionsList","Object","keys","professionName","setProfession","qualitiesList","optionName","validatorConfig","isRequired","message","isEmail","handleChange","target","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,cAAT,QAA+B,8BAA/B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAaX,SAAS,EAA5B;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAkBJ,OAAO,EAA/B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,QAAMG,OAAO,GAAGhB,UAAU,EAA1B;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAAC;AAC/BsB,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,UAAU,EAAE,EAHmB;AAI/BC,IAAAA,GAAG,EAAE,MAJ0B;AAK/BC,IAAAA,SAAS,EAAE;AALoB,GAAD,CAAhC,CANyB,CAazB;;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAkBhB,cAAc,EAAtC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYW,WAAZ;AACA,QAAM,CAACD,SAAD,EAAYE,YAAZ,IAA4B5B,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC6B,MAAD,EAASC,SAAT,IAAsB9B,QAAQ,CAAC,EAAD,CAApC;;AACA,QAAM+B,iBAAiB,GAAIC,EAAD,IAAQ;AAChC,SAAK,MAAMC,IAAX,IAAmBN,WAAnB,EAAgC;AAC9B,UAAIM,IAAI,CAACC,KAAL,KAAeF,EAAnB,EAAuB;AACrB,eAAO;AAAEG,UAAAA,GAAG,EAAEF,IAAI,CAACC,KAAZ;AAAmBZ,UAAAA,IAAI,EAAEW,IAAI,CAACG;AAA9B,SAAP;AACD;AACF;AACF,GAND;;AAOA,QAAMC,YAAY,GAAIC,QAAD,IAAc;AACjC,UAAMC,cAAc,GAAG,EAAvB;;AACA,SAAK,MAAMC,IAAX,IAAmBF,QAAnB,EAA6B;AAC3B,WAAK,MAAMG,OAAX,IAAsBf,SAAtB,EAAiC;AAC/B,YAAIc,IAAI,CAACN,KAAL,KAAeR,SAAS,CAACe,OAAD,CAAT,CAAmBP,KAAtC,EAA6C;AAC3CK,UAAAA,cAAc,CAACG,IAAf,CAAoB;AAClBP,YAAAA,GAAG,EAAET,SAAS,CAACe,OAAD,CAAT,CAAmBP,KADN;AAElBZ,YAAAA,IAAI,EAAEI,SAAS,CAACe,OAAD,CAAT,CAAmBL,KAFP;AAGlBO,YAAAA,KAAK,EAAEjB,SAAS,CAACe,OAAD,CAAT,CAAmBE;AAHR,WAApB;AAKD;AACF;AACF;;AACD,WAAOJ,cAAP;AACD,GAdD;;AAeA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,OAAO,GAAGC,QAAQ,EAAxB;AACA,QAAI,CAACD,OAAL,EAAc;AACd,UAAM;AAAEvB,MAAAA,UAAF;AAAcE,MAAAA;AAAd,QAA4BN,IAAlC;AACAhB,IAAAA,GAAG,CAAC6C,KAAJ,CACGC,MADH,CACUrC,MADV,EACkB,EACd,GAAGO,IADW;AAEdI,MAAAA,UAAU,EAAEO,iBAAiB,CAACP,UAAD,CAFf;AAGdE,MAAAA,SAAS,EAAEW,YAAY,CAACX,SAAD;AAHT,KADlB,EAMGyB,IANH,CAMS/B,IAAD,IAAUH,OAAO,CAACyB,IAAR,CAAc,UAAStB,IAAI,CAACe,GAAI,EAAhC,CANlB;AAOApB,IAAAA,OAAO,CAACC,GAAR,CAAY,EACV,GAAGI,IADO;AAEVI,MAAAA,UAAU,EAAEO,iBAAiB,CAACP,UAAD,CAFnB;AAGVE,MAAAA,SAAS,EAAEW,YAAY,CAACX,SAAD;AAHb,KAAZ;AAKD,GAjBD;;AAkBA,QAAM0B,aAAa,GAAIhC,IAAD,IAAU;AAC9B,WAAOA,IAAI,CAACiC,GAAL,CAAUC,IAAD,KAAW;AAAElB,MAAAA,KAAK,EAAEkB,IAAI,CAAChC,IAAd;AAAoBY,MAAAA,KAAK,EAAEoB,IAAI,CAACnB;AAAhC,KAAX,CAAT,CAAP;AACD,GAFD;;AAGApC,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAf,IAAAA,GAAG,CAAC6C,KAAJ,CAAUM,OAAV,CAAkB1C,MAAlB,EAA0BsC,IAA1B,CAA+B,CAAC;AAAE3B,MAAAA,UAAF;AAAcE,MAAAA,SAAd;AAAyB,SAAGN;AAA5B,KAAD,KAC7BC,OAAO,CAAEmC,SAAD,KAAgB,EACtB,GAAGA,SADmB;AAEtB,SAAGpC,IAFmB;AAGtBM,MAAAA,SAAS,EAAE0B,aAAa,CAAC1B,SAAD,CAHF;AAItBF,MAAAA,UAAU,EAAEA,UAAU,CAACW;AAJD,KAAhB,CAAD,CADT;AAQA/B,IAAAA,GAAG,CAACuB,WAAJ,CAAgB8B,QAAhB,GAA2BN,IAA3B,CAAiC/B,IAAD,IAAU;AACxC,YAAMsC,eAAe,GAAGC,MAAM,CAACC,IAAP,CAAYxC,IAAZ,EAAkBiC,GAAlB,CAAuBQ,cAAD,KAAqB;AACjEzB,QAAAA,KAAK,EAAEhB,IAAI,CAACyC,cAAD,CAAJ,CAAqBvC,IADqC;AAEjEY,QAAAA,KAAK,EAAEd,IAAI,CAACyC,cAAD,CAAJ,CAAqB1B;AAFqC,OAArB,CAAtB,CAAxB;AAIA2B,MAAAA,aAAa,CAACJ,eAAD,CAAb;AACD,KAND;AAOAtD,IAAAA,GAAG,CAACsB,SAAJ,CAAc+B,QAAd,GAAyBN,IAAzB,CAA+B/B,IAAD,IAAU;AACtC,YAAM2C,aAAa,GAAGJ,MAAM,CAACC,IAAP,CAAYxC,IAAZ,EAAkBiC,GAAlB,CAAuBW,UAAD,KAAiB;AAC3D9B,QAAAA,KAAK,EAAEd,IAAI,CAAC4C,UAAD,CAAJ,CAAiB7B,GADmC;AAE3DC,QAAAA,KAAK,EAAEhB,IAAI,CAAC4C,UAAD,CAAJ,CAAiB1C,IAFmC;AAG3DqB,QAAAA,KAAK,EAAEvB,IAAI,CAAC4C,UAAD,CAAJ,CAAiBrB;AAHmC,OAAjB,CAAtB,CAAtB;AAKAf,MAAAA,YAAY,CAACmC,aAAD,CAAZ;AACD,KAPD;AAQD,GAzBQ,EAyBN,EAzBM,CAAT;AA0BAhE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,IAAI,CAACe,GAAT,EAAchB,YAAY,CAAC,KAAD,CAAZ;AACf,GAFQ,EAEN,CAACC,IAAD,CAFM,CAAT;AAIA,QAAM6C,eAAe,GAAG;AACtB1C,IAAAA,KAAK,EAAE;AACL2C,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE;AADC,OADP;AAILC,MAAAA,OAAO,EAAE;AACPD,QAAAA,OAAO,EAAE;AADF;AAJJ,KADe;AAStB7C,IAAAA,IAAI,EAAE;AACJ4C,MAAAA,UAAU,EAAE;AACVC,QAAAA,OAAO,EAAE;AADC;AADR;AATgB,GAAxB;AAeApE,EAAAA,SAAS,CAAC,MAAM;AACdiD,IAAAA,QAAQ;AACT,GAFQ,EAEN,CAAC5B,IAAD,CAFM,CAAT;;AAGA,QAAMiD,YAAY,GAAIC,MAAD,IAAY;AAC/BjD,IAAAA,OAAO,CAAEmC,SAAD,KAAgB,EACtB,GAAGA,SADmB;AAEtB,OAACc,MAAM,CAAChD,IAAR,GAAegD,MAAM,CAACpC;AAFA,KAAhB,CAAD,CAAP;AAID,GALD;;AAMA,QAAMc,QAAQ,GAAG,MAAM;AACrB,UAAMnB,MAAM,GAAG1B,SAAS,CAACiB,IAAD,EAAO6C,eAAP,CAAxB;AACAnC,IAAAA,SAAS,CAACD,MAAD,CAAT;AACA,WAAO8B,MAAM,CAACC,IAAP,CAAY/B,MAAZ,EAAoB0C,MAApB,KAA+B,CAAtC;AACD,GAJD;;AAKA,QAAMxB,OAAO,GAAGY,MAAM,CAACC,IAAP,CAAY/B,MAAZ,EAAoB0C,MAApB,KAA+B,CAA/C;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA,kBACG,CAACrD,SAAD,IAAcyC,MAAM,CAACC,IAAP,CAAYjC,WAAZ,EAAyB4C,MAAzB,GAAkC,CAAhD,gBACC;AAAM,UAAA,QAAQ,EAAE3B,YAAhB;AAAA,kCACE,QAAC,SAAD;AACE,YAAA,KAAK,EAAC,oBADR;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,KAAK,EAAExB,IAAI,CAACE,IAHd;AAIE,YAAA,QAAQ,EAAE+C,YAJZ;AAKE,YAAA,KAAK,EAAExC,MAAM,CAACP;AALhB;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE,QAAC,SAAD;AACE,YAAA,KAAK,EAAC,mGADR;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,KAAK,EAAEF,IAAI,CAACG,KAHd;AAIE,YAAA,QAAQ,EAAE8C,YAJZ;AAKE,YAAA,KAAK,EAAExC,MAAM,CAACN;AALhB;AAAA;AAAA;AAAA;AAAA,kBARF,eAeE,QAAC,WAAD;AACE,YAAA,KAAK,EAAC,sHADR;AAEE,YAAA,aAAa,EAAC,WAFhB;AAGE,YAAA,OAAO,EAAEI,WAHX;AAIE,YAAA,IAAI,EAAC,YAJP;AAKE,YAAA,QAAQ,EAAE0C,YALZ;AAME,YAAA,KAAK,EAAEjD,IAAI,CAACI,UANd;AAOE,YAAA,KAAK,EAAEK,MAAM,CAACL;AAPhB;AAAA;AAAA;AAAA;AAAA,kBAfF,eAwBE,QAAC,UAAD;AACE,YAAA,OAAO,EAAE,CACP;AAAEF,cAAAA,IAAI,EAAE,MAAR;AAAgBY,cAAAA,KAAK,EAAE;AAAvB,aADO,EAEP;AAAEZ,cAAAA,IAAI,EAAE,QAAR;AAAkBY,cAAAA,KAAK,EAAE;AAAzB,aAFO,EAGP;AAAEZ,cAAAA,IAAI,EAAE,OAAR;AAAiBY,cAAAA,KAAK,EAAE;AAAxB,aAHO,CADX;AAME,YAAA,KAAK,EAAEd,IAAI,CAACK,GANd;AAOE,YAAA,IAAI,EAAC,KAPP;AAQE,YAAA,QAAQ,EAAE4C,YARZ;AASE,YAAA,KAAK,EAAC;AATR;AAAA;AAAA;AAAA;AAAA,kBAxBF,eAmCE,QAAC,gBAAD;AACE,YAAA,YAAY,EAAEjD,IAAI,CAACM,SADrB;AAEE,YAAA,OAAO,EAAEA,SAFX;AAGE,YAAA,QAAQ,EAAE2C,YAHZ;AAIE,YAAA,IAAI,EAAC,WAJP;AAKE,YAAA,KAAK,EAAC;AALR;AAAA;AAAA;AAAA;AAAA,kBAnCF,eA0CE;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,QAAQ,EAAE,CAACtB,OAFb;AAGE,YAAA,SAAS,EAAC,+BAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1CF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAoDC;AArDJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+DD,CAxLD;;GAAMnC,Y;UACeV,S,EACKQ,O,EAERT,U,EAUQU,c;;;KAdpBC,Y;AA0LN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { validator } from \"../../../utils/validator\";\nimport api from \"../../../api\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\nimport RadioField from \"../../common/form/radioField\";\nimport MultiSelectField from \"../../common/form/multiSelectField\";\nimport BackHistoryButton from \"../../common/backButton\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport { useProfessions } from \"../../../hooks/useProfession\";\n\nconst EditUserPage = () => {\n  const { userId } = useParams();\n  const { currentUser } = useAuth();\n  console.log(currentUser);\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    profession: \"\",\n    sex: \"male\",\n    qualities: [],\n  });\n  // const [professions, setProfession] = useState([]);\n  const { professions } = useProfessions();\n  console.log(professions);\n  const [qualities, setQualities] = useState([]);\n  const [errors, setErrors] = useState({});\n  const getProfessionById = (id) => {\n    for (const prof of professions) {\n      if (prof.value === id) {\n        return { _id: prof.value, name: prof.label };\n      }\n    }\n  };\n  const getQualities = (elements) => {\n    const qualitiesArray = [];\n    for (const elem of elements) {\n      for (const quality in qualities) {\n        if (elem.value === qualities[quality].value) {\n          qualitiesArray.push({\n            _id: qualities[quality].value,\n            name: qualities[quality].label,\n            color: qualities[quality].color,\n          });\n        }\n      }\n    }\n    return qualitiesArray;\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    const { profession, qualities } = data;\n    api.users\n      .update(userId, {\n        ...data,\n        profession: getProfessionById(profession),\n        qualities: getQualities(qualities),\n      })\n      .then((data) => history.push(`/users/${data._id}`));\n    console.log({\n      ...data,\n      profession: getProfessionById(profession),\n      qualities: getQualities(qualities),\n    });\n  };\n  const transformData = (data) => {\n    return data.map((qual) => ({ label: qual.name, value: qual._id }));\n  };\n  useEffect(() => {\n    setIsLoading(true);\n    api.users.getById(userId).then(({ profession, qualities, ...data }) =>\n      setData((prevState) => ({\n        ...prevState,\n        ...data,\n        qualities: transformData(qualities),\n        profession: profession._id,\n      }))\n    );\n    api.professions.fetchAll().then((data) => {\n      const professionsList = Object.keys(data).map((professionName) => ({\n        label: data[professionName].name,\n        value: data[professionName]._id,\n      }));\n      setProfession(professionsList);\n    });\n    api.qualities.fetchAll().then((data) => {\n      const qualitiesList = Object.keys(data).map((optionName) => ({\n        value: data[optionName]._id,\n        label: data[optionName].name,\n        color: data[optionName].color,\n      }));\n      setQualities(qualitiesList);\n    });\n  }, []);\n  useEffect(() => {\n    if (data._id) setIsLoading(false);\n  }, [data]);\n\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\",\n      },\n      isEmail: {\n        message: \"Email введен некорректно\",\n      },\n    },\n    name: {\n      isRequired: {\n        message: \"Введите ваше имя\",\n      },\n    },\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n  const handleChange = (target) => {\n    setData((prevState) => ({\n      ...prevState,\n      [target.name]: target.value,\n    }));\n  };\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const isValid = Object.keys(errors).length === 0;\n  return (\n    <div className=\"container mt-5\">\n      <BackHistoryButton />\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\n          {!isLoading && Object.keys(professions).length > 0 ? (\n            <form onSubmit={handleSubmit}>\n              <TextField\n                label=\"Имя\"\n                name=\"name\"\n                value={data.name}\n                onChange={handleChange}\n                error={errors.name}\n              />\n              <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n              />\n              <SelectField\n                label=\"Выбери свою профессию\"\n                defaultOption=\"Choose...\"\n                options={professions}\n                name=\"profession\"\n                onChange={handleChange}\n                value={data.profession}\n                error={errors.profession}\n              />\n              <RadioField\n                options={[\n                  { name: \"Male\", value: \"male\" },\n                  { name: \"Female\", value: \"female\" },\n                  { name: \"Other\", value: \"other\" },\n                ]}\n                value={data.sex}\n                name=\"sex\"\n                onChange={handleChange}\n                label=\"Выберите ваш пол\"\n              />\n              <MultiSelectField\n                defaultValue={data.qualities}\n                options={qualities}\n                onChange={handleChange}\n                name=\"qualities\"\n                label=\"Выберите ваши качества\"\n              />\n              <button\n                type=\"submit\"\n                disabled={!isValid}\n                className=\"btn btn-primary w-100 mx-auto\"\n              >\n                Обновить\n              </button>\n            </form>\n          ) : (\n            \"Loading...\"\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditUserPage;\n"]},"metadata":{},"sourceType":"module"}