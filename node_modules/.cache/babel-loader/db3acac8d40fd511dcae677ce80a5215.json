{"ast":null,"code":"var _jsxFileName = \"/Users/dmtrack/Documents/JS/Module 2 React/17 {auth and reg 2}/src/app/components/ui/registerForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useQualities } from \"../../hooks/useQualities\";\nimport { useProfessions } from \"../../hooks/useProfession\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = () => {\n  _s();\n\n  const history = useHistory();\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n    profession: \"\",\n    sex: \"male\",\n    name: \"\",\n    qualities: [],\n    licence: false\n  });\n  const {\n    signUp\n  } = useAuth();\n  const {\n    qualities\n  } = useQualities();\n  const qualitiesList = qualities.map(q => ({\n    label: q.name,\n    value: q._id\n  }));\n  const {\n    professions\n  } = useProfessions();\n  const professionsList = professions.map(p => ({\n    label: p.name,\n    value: p._id\n  }));\n  const [errors, setErrors] = useState({});\n\n  const handleChange = target => {\n    setData(prevState => ({ ...prevState,\n      [target.name]: target.value\n    }));\n  };\n\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\"\n      },\n      isEmail: {\n        message: \"Email введен некорректно\"\n      }\n    },\n    name: {\n      isRequired: {\n        message: \"Имя обязательно для заполнения\"\n      },\n      min: {\n        message: \"Имя должно состоять минимум из 3 символов\",\n        value: 3\n      }\n    },\n    password: {\n      isRequired: {\n        message: \"Пароль обязателен для заполнения\"\n      },\n      isCapitalSymbol: {\n        message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n      },\n      isContainDigit: {\n        message: \"Пароль должен содержать хотя бы одно число\"\n      },\n      min: {\n        message: \"Пароль должен состоять минимум из 8 символов\",\n        value: 8\n      }\n    },\n    profession: {\n      isRequired: {\n        message: \"Обязательно выберите вашу профессию\"\n      }\n    },\n    licence: {\n      isRequired: {\n        message: \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\n      }\n    }\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const isValid = Object.keys(errors).length === 0;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    const newData = { ...data,\n      qualities: data.qualities.map(q => q.value)\n    };\n\n    try {\n      await signUp(newData);\n      history.push(\"/\");\n    } catch (error) {\n      setErrors(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\",\n      name: \"email\",\n      value: data.email,\n      onChange: handleChange,\n      error: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u0418\\u043C\\u044F\",\n      name: \"name\",\n      value: data.name,\n      onChange: handleChange,\n      error: errors.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      type: \"password\",\n      name: \"password\",\n      value: data.password,\n      onChange: handleChange,\n      error: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0441\\u0432\\u043E\\u044E \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044E\",\n      defaultOption: \"Choose...\",\n      options: professionsList,\n      name: \"profession\",\n      onChange: handleChange,\n      value: data.profession,\n      error: errors.profession\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RadioField, {\n      options: [{\n        name: \"Male\",\n        value: \"male\"\n      }, {\n        name: \"Female\",\n        value: \"female\"\n      }, {\n        name: \"Other\",\n        value: \"other\"\n      }],\n      value: data.sex,\n      name: \"sex\",\n      onChange: handleChange,\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043F\\u043E\\u043B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MultiSelectField, {\n      options: qualitiesList,\n      onChange: handleChange,\n      defaultValue: data.qualities,\n      name: \"qualities\",\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0438 \\u043A\\u0430\\u0447\\u0435\\u0441\\u0442\\u0432\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CheckBoxField, {\n      value: data.licence,\n      onChange: handleChange,\n      name: \"licence\",\n      error: errors.licence,\n      children: [\"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C \", /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"\\u043B\\u0438\\u0446\\u0435\\u043D\\u0437\\u0438\\u043E\\u043D\\u043D\\u043E\\u0435 \\u0441\\u043E\\u0433\\u043B\\u0430\\u0448\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary w-100 mx-auto\",\n      type: \"submit\",\n      disabled: !isValid,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterForm, \"agR2qcHUkq9CSqaO202vRvBNp1g=\", false, function () {\n  return [useHistory, useAuth, useQualities, useProfessions];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/dmtrack/Documents/JS/Module 2 React/17 {auth and reg 2}/src/app/components/ui/registerForm.jsx"],"names":["React","useEffect","useState","validator","TextField","SelectField","RadioField","MultiSelectField","CheckBoxField","useQualities","useProfessions","useAuth","useHistory","RegisterForm","history","data","setData","email","password","profession","sex","name","qualities","licence","signUp","qualitiesList","map","q","label","value","_id","professions","professionsList","p","errors","setErrors","handleChange","target","prevState","validatorConfig","isRequired","message","isEmail","min","isCapitalSymbol","isContainDigit","validate","Object","keys","length","isValid","handleSubmit","e","preventDefault","newData","push","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useQualities } from \"../../hooks/useQualities\";\nimport { useProfessions } from \"../../hooks/useProfession\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst RegisterForm = () => {\n    const history = useHistory();\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"male\",\n        name: \"\",\n        qualities: [],\n        licence: false\n    });\n    const { signUp } = useAuth();\n    const { qualities } = useQualities();\n    const qualitiesList = qualities.map((q) => ({\n        label: q.name,\n        value: q._id\n    }));\n    const { professions } = useProfessions();\n    const professionsList = professions.map((p) => ({\n        label: p.name,\n        value: p._id\n    }));\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        name: {\n            isRequired: {\n                message: \"Имя обязательно для заполнения\"\n            },\n            min: {\n                message: \"Имя должно состоять минимум из 3 символов\",\n                value: 3\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состоять минимум из 8 символов\",\n                value: 8\n            }\n        },\n        profession: {\n            isRequired: {\n                message: \"Обязательно выберите вашу профессию\"\n            }\n        },\n        licence: {\n            isRequired: {\n                message:\n                    \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const newData = {\n            ...data,\n            qualities: data.qualities.map((q) => q.value)\n        };\n\n        try {\n            await signUp(newData);\n            history.push(\"/\");\n        } catch (error) {\n            setErrors(error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Имя\"\n                name=\"name\"\n                value={data.name}\n                onChange={handleChange}\n                error={errors.name}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <SelectField\n                label=\"Выбери свою профессию\"\n                defaultOption=\"Choose...\"\n                options={professionsList}\n                name=\"profession\"\n                onChange={handleChange}\n                value={data.profession}\n                error={errors.profession}\n            />\n            <RadioField\n                options={[\n                    { name: \"Male\", value: \"male\" },\n                    { name: \"Female\", value: \"female\" },\n                    { name: \"Other\", value: \"other\" }\n                ]}\n                value={data.sex}\n                name=\"sex\"\n                onChange={handleChange}\n                label=\"Выберите ваш пол\"\n            />\n            <MultiSelectField\n                options={qualitiesList}\n                onChange={handleChange}\n                defaultValue={data.qualities}\n                name=\"qualities\"\n                label=\"Выберите ваши качества\"\n            />\n            <CheckBoxField\n                value={data.licence}\n                onChange={handleChange}\n                name=\"licence\"\n                error={errors.licence}\n            >\n                Подтвердить <a>лицензионное соглашение</a>\n            </CheckBoxField>\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}