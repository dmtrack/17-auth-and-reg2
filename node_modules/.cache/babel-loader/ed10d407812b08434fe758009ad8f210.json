{"ast":null,"code":"var _jsxFileName = \"/Users/dmtrack/Documents/JS/Module 2 React/17 {auth and reg 2}/src/app/components/page/editUserPage/editUserPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { validator } from \"../../../utils/validator\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\nimport RadioField from \"../../common/form/radioField\";\nimport MultiSelectField from \"../../common/form/multiSelectField\";\nimport BackHistoryButton from \"../../common/backButton\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport { useProfessions } from \"../../../hooks/useProfession\";\nimport { useQualities } from \"../../../hooks/useQualities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditUserPage = () => {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const {\n    currentUser,\n    editUserData\n  } = useAuth();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    professions\n  } = useProfessions();\n  const {\n    qualities\n  } = useQualities();\n  const [errors, setErrors] = useState({});\n  const professionsList = professions.map(p => ({\n    label: p.name,\n    value: p._id\n  }));\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    profession: \"\",\n    sex: \"male\",\n    qualities: []\n  });\n\n  const getQualities = elements => {\n    const qualitiesArray = [];\n\n    for (const elem of elements) {\n      for (const quality in qualities) {\n        if (elem === qualities[quality]._id) {\n          qualitiesArray.push({\n            value: qualities[quality]._id,\n            label: qualities[quality].name,\n            color: qualities[quality].color\n          });\n        }\n      }\n    }\n\n    return qualitiesArray;\n  };\n\n  function getProfessionById(id) {\n    for (const prof of professions) {\n      if (prof._id === id) {\n        return prof.name;\n      }\n    }\n  }\n\n  const transformData = data => {\n    return data.map(qual => ({\n      label: qual.name,\n      value: qual._id,\n      color: qual.color\n    }));\n  };\n\n  const transformQualities = elements => {\n    const qualitiesArray = [];\n    elements.forEach(element => {\n      qualitiesArray.push({\n        value: element.value,\n        label: element.label,\n        color: element.color\n      });\n    });\n    return qualitiesArray;\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    const {\n      profession,\n      qualities\n    } = data;\n    const newData = { ...data,\n      qualities: data.qualities.map(q => q.value)\n    };\n\n    try {\n      await editUserData(newData);\n      history.push(`/users/${currentUser._id}`);\n    } catch (error) {\n      setErrors(error);\n    }\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    setData(prevState => ({ ...prevState,\n      ...data,\n      qualities: getQualities(currentUser.qualities),\n      profession: getProfessionById(currentUser.profession),\n      name: currentUser.name,\n      email: currentUser.email,\n      id: currentUser._id\n    }));\n  }, []);\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\"\n      },\n      isEmail: {\n        message: \"Email введен некорректно\"\n      }\n    },\n    name: {\n      isRequired: {\n        message: \"Введите ваше имя\"\n      }\n    }\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n  useEffect(() => {\n    if (data.id) setIsLoading(false);\n  }, [data]);\n\n  const handleChange = target => {\n    console.log(target.name);\n    console.log(target.value);\n    setData(prevState => ({ ...prevState,\n      [target.name]: target.value\n    }));\n    console.log(data);\n  };\n\n  console.log(isLoading);\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const isValid = Object.keys(errors).length === 0;\n  return !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(BackHistoryButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-md-3 shadow p-4\",\n        children: !isLoading ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u0418\\u043C\\u044F\",\n            name: \"name\",\n            value: data.name,\n            onChange: handleChange,\n            error: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\",\n            name: \"email\",\n            value: data.email,\n            onChange: handleChange,\n            error: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n            label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0441\\u0432\\u043E\\u044E \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044E\",\n            defaultOption: \"Choose...\",\n            options: professionsList,\n            name: \"profession\",\n            onChange: handleChange,\n            value: data.profession,\n            error: errors.profession\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(RadioField, {\n            options: [{\n              name: \"Male\",\n              value: \"male\"\n            }, {\n              name: \"Female\",\n              value: \"female\"\n            }, {\n              name: \"Other\",\n              value: \"other\"\n            }],\n            value: currentUser.sex,\n            name: \"sex\",\n            onChange: handleChange,\n            label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043F\\u043E\\u043B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MultiSelectField, {\n            defaultValue: data.qualities,\n            options: transformData(qualities),\n            onChange: handleChange,\n            name: \"qualities\",\n            label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0438 \\u043A\\u0430\\u0447\\u0435\\u0441\\u0442\\u0432\\u0430\"\n          }, data.qualities, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !isValid,\n            className: \"btn btn-primary w-100 mx-auto\",\n            children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this) : \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 7\n  }, this);\n};\n\n_s(EditUserPage, \"EzKSMlNQh8Un/3wARVEIfFk8BGI=\", false, function () {\n  return [useParams, useAuth, useHistory, useProfessions, useQualities];\n});\n\n_c = EditUserPage;\nexport default EditUserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUserPage\");","map":{"version":3,"sources":["/Users/dmtrack/Documents/JS/Module 2 React/17 {auth and reg 2}/src/app/components/page/editUserPage/editUserPage.jsx"],"names":["React","useEffect","useState","useHistory","useParams","validator","TextField","SelectField","RadioField","MultiSelectField","BackHistoryButton","useAuth","useProfessions","useQualities","EditUserPage","userId","currentUser","editUserData","history","isLoading","setIsLoading","professions","qualities","errors","setErrors","professionsList","map","p","label","name","value","_id","data","setData","email","profession","sex","getQualities","elements","qualitiesArray","elem","quality","push","color","getProfessionById","id","prof","transformData","qual","transformQualities","forEach","element","handleSubmit","e","preventDefault","isValid","validate","newData","q","error","prevState","validatorConfig","isRequired","message","isEmail","handleChange","target","console","log","Object","keys","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { validator } from \"../../../utils/validator\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\nimport RadioField from \"../../common/form/radioField\";\nimport MultiSelectField from \"../../common/form/multiSelectField\";\nimport BackHistoryButton from \"../../common/backButton\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport { useProfessions } from \"../../../hooks/useProfession\";\nimport { useQualities } from \"../../../hooks/useQualities\";\n\nconst EditUserPage = () => {\n  const { userId } = useParams();\n  const { currentUser, editUserData } = useAuth();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const { professions } = useProfessions();\n  const { qualities } = useQualities();\n  const [errors, setErrors] = useState({});\n\n  const professionsList = professions.map((p) => ({\n    label: p.name,\n    value: p._id,\n  }));\n\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    profession: \"\",\n    sex: \"male\",\n    qualities: [],\n  });\n\n  const getQualities = (elements) => {\n    const qualitiesArray = [];\n    for (const elem of elements) {\n      for (const quality in qualities) {\n        if (elem === qualities[quality]._id) {\n          qualitiesArray.push({\n            value: qualities[quality]._id,\n            label: qualities[quality].name,\n            color: qualities[quality].color,\n          });\n        }\n      }\n    }\n    return qualitiesArray;\n  };\n\n  function getProfessionById(id) {\n    for (const prof of professions) {\n      if (prof._id === id) {\n        return prof.name;\n      }\n    }\n  }\n\n  const transformData = (data) => {\n    return data.map((qual) => ({\n      label: qual.name,\n      value: qual._id,\n      color: qual.color,\n    }));\n  };\n\n  const transformQualities = (elements) => {\n    const qualitiesArray = [];\n    elements.forEach((element) => {\n      qualitiesArray.push({\n        value: element.value,\n        label: element.label,\n        color: element.color,\n      });\n    });\n    return qualitiesArray;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    const { profession, qualities } = data;\n    const newData = {\n      ...data,\n      qualities: data.qualities.map((q) => q.value),\n    };\n    try {\n      await editUserData(newData);\n      history.push(`/users/${currentUser._id}`);\n    } catch (error) {\n      setErrors(error);\n    }\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    setData((prevState) => ({\n      ...prevState,\n      ...data,\n      qualities: getQualities(currentUser.qualities),\n      profession: getProfessionById(currentUser.profession),\n      name: currentUser.name,\n      email: currentUser.email,\n      id: currentUser._id,\n    }));\n  }, []);\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\",\n      },\n      isEmail: {\n        message: \"Email введен некорректно\",\n      },\n    },\n    name: {\n      isRequired: {\n        message: \"Введите ваше имя\",\n      },\n    },\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n\n  useEffect(() => {\n    if (data.id) setIsLoading(false);\n  }, [data]);\n\n  const handleChange = (target) => {\n    console.log(target.name);\n    console.log(target.value);\n    setData((prevState) => ({\n      ...prevState,\n      [target.name]: target.value,\n    }));\n    console.log(data);\n  };\n\n  console.log(isLoading);\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const isValid = Object.keys(errors).length === 0;\n  return (\n    !isLoading && (\n      <div className=\"container mt-5\">\n        <BackHistoryButton />\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3 shadow p-4\">\n            {!isLoading ? (\n              <form onSubmit={handleSubmit}>\n                <TextField\n                  label=\"Имя\"\n                  name=\"name\"\n                  value={data.name}\n                  onChange={handleChange}\n                  error={errors.name}\n                />\n                <TextField\n                  label=\"Электронная почта\"\n                  name=\"email\"\n                  value={data.email}\n                  onChange={handleChange}\n                  error={errors.email}\n                />\n\n                <SelectField\n                  label=\"Выбери свою профессию\"\n                  defaultOption=\"Choose...\"\n                  options={professionsList}\n                  name=\"profession\"\n                  onChange={handleChange}\n                  value={data.profession}\n                  error={errors.profession}\n                />\n                <RadioField\n                  options={[\n                    { name: \"Male\", value: \"male\" },\n                    { name: \"Female\", value: \"female\" },\n                    { name: \"Other\", value: \"other\" },\n                  ]}\n                  value={currentUser.sex}\n                  name=\"sex\"\n                  onChange={handleChange}\n                  label=\"Выберите ваш пол\"\n                />\n                <MultiSelectField\n                  key={data.qualities}\n                  defaultValue={data.qualities}\n                  options={transformData(qualities)}\n                  onChange={handleChange}\n                  name=\"qualities\"\n                  label=\"Выберите ваши качества\"\n                />\n                <button\n                  type=\"submit\"\n                  disabled={!isValid}\n                  className=\"btn btn-primary w-100 mx-auto\"\n                >\n                  Обновить\n                </button>\n              </form>\n            ) : (\n              \"Loading...\"\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  );\n};\nexport default EditUserPage;\n"]},"metadata":{},"sourceType":"module"}