{"ast":null,"code":"var _jsxFileName = \"/Users/dmtrack/Documents/JS/Module 2 React/17 {auth and reg 2}/src/app/hooks/useAuth.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport userService from \"../services/user.service\";\nimport localStorageService, { setTokens } from \"../services/localStorage.service\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const httpAuth = axios.create({\n  baseURL: \"https://identitytoolkit.googleapis.com/v1/\",\n  params: {\n    key: process.env.REACT_APP_FIREBASE_KEY\n  }\n});\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nconst AuthProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [currentUser, setUser] = useState();\n  const [error, setError] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n  const history = useHistory();\n\n  async function logIn({\n    email,\n    password\n  }) {\n    try {\n      const {\n        data\n      } = await httpAuth.post(`accounts:signInWithPassword`, {\n        email,\n        password,\n        returnSecureToken: true\n      });\n      setTokens(data);\n      await getUserData();\n    } catch (error) {\n      errorCatcher(error);\n      const {\n        code,\n        message\n      } = error.response.data.error;\n      console.log(code, message);\n\n      if (code === 400) {\n        switch (message) {\n          case \"INVALID_PASSWORD\":\n            throw new Error(\"Email или пароль введены некорректно\");\n\n          default:\n            throw new Error(\"Слишком много попыток входа. Попробуйте позже\");\n        }\n      }\n    }\n  }\n\n  function logOut() {\n    localStorageService.removeAuthData();\n    setUser(null);\n    history.push(\"/\");\n  }\n\n  function randomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  async function signUp({\n    email,\n    password,\n    ...rest\n  }) {\n    try {\n      const {\n        data\n      } = await httpAuth.post(`accounts:signUp`, {\n        email,\n        password,\n        returnSecureToken: true\n      });\n      setTokens(data);\n      await createUser({\n        _id: data.localId,\n        email,\n        rate: randomInt(1, 5),\n        completedMeetings: randomInt(0, 200),\n        image: `https://avatars.dicebear.com/api/avataaars/${(Math.random() + 1).toString(36).substring(7)}.svg`,\n        ...rest\n      });\n    } catch (error) {\n      errorCatcher(error);\n      const {\n        code,\n        message\n      } = error.response.data.error;\n      console.log(code, message);\n\n      if (code === 400) {\n        if (message === \"EMAIL_EXISTS\") {\n          const errorObject = {\n            email: \"Пользователь с таким Email уже существует\"\n          };\n          throw errorObject;\n        }\n      }\n    }\n  }\n\n  async function createUser(data) {\n    try {\n      const {\n        content\n      } = await userService.create(data);\n      console.log(content);\n      setUser(content);\n    } catch (error) {\n      errorCatcher(error);\n    }\n  }\n\n  async function editUserData(data) {\n    try {\n      const {\n        content\n      } = await userService.edit(data);\n      console.log(content);\n      setUser(content);\n    } catch (error) {\n      errorCatcher(error);\n    }\n  }\n\n  function errorCatcher(error) {\n    const {\n      message\n    } = error.response.data;\n    setError(message);\n  }\n\n  async function getUserData() {\n    try {\n      const {\n        content\n      } = await userService.getCurrentUser();\n      setUser(content);\n    } catch (error) {\n      errorCatcher(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (localStorageService.getAccessToken()) {\n      getUserData();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    if (error !== null) {\n      toast(error);\n      setError(null);\n    }\n  }, [error]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      signUp,\n      logIn,\n      currentUser,\n      logOut,\n      editUserData\n    },\n    children: !isLoading ? children : \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AuthProvider, \"ApRRcM6Qlk9ckZJeEWzH5IZSBWo=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthProvider;\nAuthProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n};\nexport default AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/dmtrack/Documents/JS/Module 2 React/17 {auth and reg 2}/src/app/hooks/useAuth.jsx"],"names":["React","useContext","useState","useEffect","PropTypes","toast","axios","userService","localStorageService","setTokens","useHistory","httpAuth","create","baseURL","params","key","process","env","REACT_APP_FIREBASE_KEY","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setUser","error","setError","isLoading","setLoading","history","logIn","email","password","data","post","returnSecureToken","getUserData","errorCatcher","code","message","response","console","log","Error","logOut","removeAuthData","push","randomInt","min","max","Math","floor","random","signUp","rest","createUser","_id","localId","rate","completedMeetings","image","toString","substring","errorObject","content","editUserData","edit","getCurrentUser","getAccessToken","propTypes","oneOfType","arrayOf","node"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport userService from \"../services/user.service\";\nimport localStorageService, {\n  setTokens,\n} from \"../services/localStorage.service\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const httpAuth = axios.create({\n  baseURL: \"https://identitytoolkit.googleapis.com/v1/\",\n  params: {\n    key: process.env.REACT_APP_FIREBASE_KEY,\n  },\n});\nconst AuthContext = React.createContext();\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n\nconst AuthProvider = ({ children }) => {\n  const [currentUser, setUser] = useState();\n  const [error, setError] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n  const history = useHistory();\n\n  async function logIn({ email, password }) {\n    try {\n      const { data } = await httpAuth.post(`accounts:signInWithPassword`, {\n        email,\n        password,\n        returnSecureToken: true,\n      });\n      setTokens(data);\n      await getUserData();\n    } catch (error) {\n      errorCatcher(error);\n      const { code, message } = error.response.data.error;\n      console.log(code, message);\n      if (code === 400) {\n        switch (message) {\n          case \"INVALID_PASSWORD\":\n            throw new Error(\"Email или пароль введены некорректно\");\n\n          default:\n            throw new Error(\"Слишком много попыток входа. Попробуйте позже\");\n        }\n      }\n    }\n  }\n\n  function logOut() {\n    localStorageService.removeAuthData();\n    setUser(null);\n    history.push(\"/\");\n  }\n\n  function randomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  async function signUp({ email, password, ...rest }) {\n    try {\n      const { data } = await httpAuth.post(`accounts:signUp`, {\n        email,\n        password,\n        returnSecureToken: true,\n      });\n      setTokens(data);\n      await createUser({\n        _id: data.localId,\n        email,\n        rate: randomInt(1, 5),\n        completedMeetings: randomInt(0, 200),\n        image: `https://avatars.dicebear.com/api/avataaars/${(Math.random() + 1)\n          .toString(36)\n          .substring(7)}.svg`,\n        ...rest,\n      });\n    } catch (error) {\n      errorCatcher(error);\n      const { code, message } = error.response.data.error;\n      console.log(code, message);\n      if (code === 400) {\n        if (message === \"EMAIL_EXISTS\") {\n          const errorObject = {\n            email: \"Пользователь с таким Email уже существует\",\n          };\n          throw errorObject;\n        }\n      }\n    }\n  }\n\n  async function createUser(data) {\n    try {\n      const { content } = await userService.create(data);\n      console.log(content);\n      setUser(content);\n    } catch (error) {\n      errorCatcher(error);\n    }\n  }\n\n  async function editUserData(data) {\n    try {\n      const { content } = await userService.edit(data);\n      console.log(content);\n      setUser(content);\n    } catch (error) {\n      errorCatcher(error);\n    }\n  }\n\n  function errorCatcher(error) {\n    const { message } = error.response.data;\n    setError(message);\n  }\n\n  async function getUserData() {\n    try {\n      const { content } = await userService.getCurrentUser();\n      setUser(content);\n    } catch (error) {\n      errorCatcher(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (localStorageService.getAccessToken()) {\n      getUserData();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    if (error !== null) {\n      toast(error);\n      setError(null);\n    }\n  }, [error]);\n  return (\n    <AuthContext.Provider\n      value={{ signUp, logIn, currentUser, logOut, editUserData }}\n    >\n      {!isLoading ? children : \"Loading...\"}\n    </AuthContext.Provider>\n  );\n};\n\nAuthProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default AuthProvider;\n"]},"metadata":{},"sourceType":"module"}