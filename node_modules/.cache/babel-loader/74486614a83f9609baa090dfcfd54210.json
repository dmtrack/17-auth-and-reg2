{"ast":null,"code":"var _jsxFileName = \"/Users/dmtrack/Documents/JS/Module 2 React/17 {auth and reg 2}/src/app/hooks/useAuth.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport userService from \"../services/user.service\";\nimport localStorageService, { setTokens } from \"../services/localStorage.service\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const httpAuth = axios.create({\n  baseURL: \"https://identitytoolkit.googleapis.com/v1/\",\n  params: {\n    key: process.env.REACT_APP_FIREBASE_KEY\n  }\n});\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nconst AuthProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [currentUser, setUser] = useState();\n  const [error, setError] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n  const history = useHistory();\n\n  async function logIn({\n    email,\n    password\n  }) {\n    try {\n      const {\n        data\n      } = await httpAuth.post(`accounts:signInWithPassword`, {\n        email,\n        password,\n        returnSecureToken: true\n      });\n      setTokens(data);\n      await getUserData();\n    } catch (error) {\n      errorCatcher(error);\n      const {\n        code,\n        message\n      } = error.response.data.error;\n      console.log(code, message);\n\n      if (code === 400) {\n        switch (message) {\n          case \"INVALID_PASSWORD\":\n            throw new Error(\"Email или пароль введены некорректно\");\n\n          default:\n            throw new Error(\"Слишком много попыток входа. Попробуйте позже\");\n        }\n      }\n    }\n  }\n\n  function logOut() {\n    localStorageService.removeAuthData();\n    setUser(null);\n    history.push(\"/\");\n  }\n\n  function randomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  async function signUp({\n    email,\n    password,\n    ...rest\n  }) {\n    try {\n      const {\n        data\n      } = await httpAuth.post(`accounts:signUp`, {\n        email,\n        password,\n        returnSecureToken: true\n      });\n      setTokens(data);\n      await createUser({\n        _id: data.localId,\n        email,\n        rate: randomInt(1, 5),\n        completedMeetings: randomInt(0, 200),\n        image: `https://avatars.dicebear.com/api/avataaars/${(Math.random() + 1).toString(36).substring(7)}.svg`,\n        ...rest\n      });\n    } catch (error) {\n      errorCatcher(error);\n      const {\n        code,\n        message\n      } = error.response.data.error;\n      console.log(code, message);\n\n      if (code === 400) {\n        if (message === \"EMAIL_EXISTS\") {\n          const errorObject = {\n            email: \"Пользователь с таким Email уже существует\"\n          };\n          throw errorObject;\n        }\n      }\n    }\n  }\n\n  async function createUser(data) {\n    try {\n      const {\n        content\n      } = await userService.create(data);\n      console.log(content);\n      setUser(content);\n    } catch (error) {\n      errorCatcher(error);\n    }\n  } // async function createUser(data) {\n  //     try {\n  //         const { content } = await userService.create(data);\n  //         console.log(content);\n  //         setUser(content);\n  //     } catch (error) {\n  //         errorCatcher(error);\n  //     }\n  // }\n  //\n\n\n  function errorCatcher(error) {\n    const {\n      message\n    } = error.response.data;\n    setError(message);\n  }\n\n  async function getUserData() {\n    try {\n      const {\n        content\n      } = await userService.getCurrentUser();\n      setUser(content);\n    } catch (error) {\n      errorCatcher(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (localStorageService.getAccessToken()) {\n      getUserData();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    if (error !== null) {\n      toast(error);\n      setError(null);\n    }\n  }, [error]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      signUp,\n      logIn,\n      currentUser,\n      logOut\n    },\n    children: !isLoading ? children : \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(AuthProvider, \"ApRRcM6Qlk9ckZJeEWzH5IZSBWo=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthProvider;\nAuthProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n};\nexport default AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/dmtrack/Documents/JS/Module 2 React/17 {auth and reg 2}/src/app/hooks/useAuth.jsx"],"names":["React","useContext","useState","useEffect","PropTypes","toast","axios","userService","localStorageService","setTokens","useHistory","httpAuth","create","baseURL","params","key","process","env","REACT_APP_FIREBASE_KEY","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setUser","error","setError","isLoading","setLoading","history","logIn","email","password","data","post","returnSecureToken","getUserData","errorCatcher","code","message","response","console","log","Error","logOut","removeAuthData","push","randomInt","min","max","Math","floor","random","signUp","rest","createUser","_id","localId","rate","completedMeetings","image","toString","substring","errorObject","content","getCurrentUser","getAccessToken","propTypes","oneOfType","arrayOf","node"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {toast} from \"react-toastify\";\nimport axios from \"axios\";\nimport userService from \"../services/user.service\";\nimport localStorageService, {\n    setTokens\n} from \"../services/localStorage.service\";\nimport {useHistory} from \"react-router-dom\";\n\nexport const httpAuth = axios.create({\n    baseURL: \"https://identitytoolkit.googleapis.com/v1/\",\n    params: {\n        key: process.env.REACT_APP_FIREBASE_KEY\n    }\n});\nconst AuthContext = React.createContext();\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};\n\nconst AuthProvider = ({children}) => {\n    const [currentUser, setUser] = useState();\n    const [error, setError] = useState(null);\n    const [isLoading, setLoading] = useState(true);\n    const history = useHistory();\n\n    async function logIn({email, password}) {\n        try {\n            const {data} = await httpAuth.post(\n                `accounts:signInWithPassword`,\n                {\n                    email,\n                    password,\n                    returnSecureToken: true\n                }\n            );\n            setTokens(data);\n            await getUserData();\n        } catch (error) {\n            errorCatcher(error);\n            const {code, message} = error.response.data.error;\n            console.log(code, message);\n            if (code === 400) {\n                switch (message) {\n                    case \"INVALID_PASSWORD\":\n                        throw new Error(\"Email или пароль введены некорректно\");\n\n                    default:\n                        throw new Error(\n                            \"Слишком много попыток входа. Попробуйте позже\"\n                        );\n                }\n            }\n        }\n    }\n\n    function logOut() {\n        localStorageService.removeAuthData();\n        setUser(null);\n        history.push(\"/\");\n    }\n\n    function randomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    }\n\n    async function signUp({email, password, ...rest}) {\n        try {\n            const {data} = await httpAuth.post(`accounts:signUp`, {\n                email,\n                password,\n                returnSecureToken: true\n            });\n            setTokens(data);\n            await createUser({\n                _id: data.localId,\n                email,\n                rate: randomInt(1, 5),\n                completedMeetings: randomInt(0, 200),\n                image: `https://avatars.dicebear.com/api/avataaars/${(\n                    Math.random() + 1\n                )\n                    .toString(36)\n                    .substring(7)}.svg`,\n                ...rest\n            });\n        } catch (error) {\n            errorCatcher(error);\n            const {code, message} = error.response.data.error;\n            console.log(code, message);\n            if (code === 400) {\n                if (message === \"EMAIL_EXISTS\") {\n                    const errorObject = {\n                        email: \"Пользователь с таким Email уже существует\"\n                    };\n                    throw errorObject;\n                }\n            }\n        }\n    }\n\n    async function createUser(data) {\n        try {\n            const {content} = await userService.create(data);\n            console.log(content);\n            setUser(content);\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n\n    // async function createUser(data) {\n    //     try {\n    //         const { content } = await userService.create(data);\n    //         console.log(content);\n    //         setUser(content);\n    //     } catch (error) {\n    //         errorCatcher(error);\n    //     }\n    // }\n    //\n\n    function errorCatcher(error) {\n        const {message} = error.response.data;\n        setError(message);\n    }\n\n    async function getUserData() {\n        try {\n            const {content} = await userService.getCurrentUser();\n            setUser(content);\n        } catch (error) {\n            errorCatcher(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n\n    useEffect(() => {\n        if (localStorageService.getAccessToken()) {\n            getUserData();\n        } else {\n            setLoading(false);\n        }\n    }, []);\n    useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n    return (\n        <AuthContext.Provider value={{signUp, logIn, currentUser, logOut}}>\n            {!isLoading ? children : \"Loading...\"}\n        </AuthContext.Provider>\n    );\n};\n\nAuthProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default AuthProvider;\n"]},"metadata":{},"sourceType":"module"}