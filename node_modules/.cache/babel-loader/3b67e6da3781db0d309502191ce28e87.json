{"ast":null,"code":"import httpService from \"./http.service\";\nimport localStorageService from \"./localStorage.service\";\nconst userEndpoint = \"user/\";\nconst userService = {\n  get: async () => {\n    const {\n      data\n    } = await httpService.get(userEndpoint);\n    return data;\n  },\n  create: async payload => {\n    const {\n      data\n    } = await httpService.put(userEndpoint + payload._id, payload);\n    return data;\n  },\n  getCurrentUser: async () => {\n    const {\n      data\n    } = await httpService.get(userEndpoint + localStorageService.getUserId());\n    return data;\n  },\n  edit: async payload => {\n    const {\n      data\n    } = await httpService.patch(userEndpoint + localStorageService.getUserId(), payload);\n    return data;\n  }\n};\nexport default userService;","map":{"version":3,"sources":["/Users/dmtrack/Documents/JS/Module 2 React/17 {auth and reg 2}/src/app/services/user.service.js"],"names":["httpService","localStorageService","userEndpoint","userService","get","data","create","payload","put","_id","getCurrentUser","getUserId","edit","patch"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,OAAOC,mBAAP,MAAgC,wBAAhC;AAEA,MAAMC,YAAY,GAAG,OAArB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,GAAG,EAAE,YAAY;AACf,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,WAAW,CAACI,GAAZ,CAAgBF,YAAhB,CAAvB;AACA,WAAOG,IAAP;AACD,GAJiB;AAKlBC,EAAAA,MAAM,EAAE,MAAOC,OAAP,IAAmB;AACzB,UAAM;AAAEF,MAAAA;AAAF,QAAW,MAAML,WAAW,CAACQ,GAAZ,CAAgBN,YAAY,GAAGK,OAAO,CAACE,GAAvC,EAA4CF,OAA5C,CAAvB;AACA,WAAOF,IAAP;AACD,GARiB;AASlBK,EAAAA,cAAc,EAAE,YAAY;AAC1B,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAML,WAAW,CAACI,GAAZ,CACrBF,YAAY,GAAGD,mBAAmB,CAACU,SAApB,EADM,CAAvB;AAGA,WAAON,IAAP;AACD,GAdiB;AAelBO,EAAAA,IAAI,EAAE,MAAOL,OAAP,IAAmB;AACvB,UAAM;AAAEF,MAAAA;AAAF,QAAW,MAAML,WAAW,CAACa,KAAZ,CACrBX,YAAY,GAAGD,mBAAmB,CAACU,SAApB,EADM,EAErBJ,OAFqB,CAAvB;AAIA,WAAOF,IAAP;AACD;AArBiB,CAApB;AAuBA,eAAeF,WAAf","sourcesContent":["import httpService from \"./http.service\";\nimport localStorageService from \"./localStorage.service\";\n\nconst userEndpoint = \"user/\";\n\nconst userService = {\n  get: async () => {\n    const { data } = await httpService.get(userEndpoint);\n    return data;\n  },\n  create: async (payload) => {\n    const { data } = await httpService.put(userEndpoint + payload._id, payload);\n    return data;\n  },\n  getCurrentUser: async () => {\n    const { data } = await httpService.get(\n      userEndpoint + localStorageService.getUserId()\n    );\n    return data;\n  },\n  edit: async (payload) => {\n    const { data } = await httpService.patch(\n      userEndpoint + localStorageService.getUserId(),\n      payload\n    );\n    return data;\n  },\n};\nexport default userService;\n"]},"metadata":{},"sourceType":"module"}