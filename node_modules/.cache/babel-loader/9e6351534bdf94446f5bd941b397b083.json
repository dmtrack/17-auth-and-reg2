{"ast":null,"code":"var _jsxFileName = \"/Users/dmtrack/Documents/JS/Module 2 React/17 {auth and reg 2}/src/app/components/page/editUserPage/editUserPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { validator } from \"../../../utils/validator\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\nimport RadioField from \"../../common/form/radioField\";\nimport MultiSelectField from \"../../common/form/multiSelectField\";\nimport BackHistoryButton from \"../../common/backButton\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport { useProfessions } from \"../../../hooks/useProfession\";\nimport { useQualities } from \"../../../hooks/useQualities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditUserPage = () => {\n  _s();\n\n  const {\n    currentUser,\n    editUserData\n  } = useAuth();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    professions\n  } = useProfessions();\n  const {\n    qualities\n  } = useQualities();\n  const [errors, setErrors] = useState({});\n  const professionsList = professions.map(p => ({\n    label: p.name,\n    value: p._id\n  }));\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    profession: \"\",\n    sex: \"male\",\n    qualities: []\n  });\n\n  const getQualities = elements => {\n    const qualitiesArray = [];\n\n    for (const elem of elements) {\n      for (const quality in qualities) {\n        if (elem === qualities[quality]._id) {\n          qualitiesArray.push({\n            value: qualities[quality]._id,\n            label: qualities[quality].name,\n            color: qualities[quality].color\n          });\n        }\n      }\n    }\n\n    return qualitiesArray;\n  };\n\n  function getProfessionById(id) {\n    for (const prof of professions) {\n      if (prof._id === id) {\n        return prof.name;\n      }\n    }\n  }\n\n  const transformData = data => {\n    return data.map(qual => ({\n      label: qual.name,\n      value: qual._id,\n      color: qual.color\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    const newData = { ...data,\n      qualities: data.qualities.map(q => q.value),\n      profession: data.profession\n    };\n\n    try {\n      await editUserData(newData);\n      history.push(`/users/${currentUser._id}`);\n    } catch (error) {\n      setErrors(error);\n    }\n  };\n\n  useEffect(() => {\n    setData(prevState => ({ ...prevState,\n      ...data,\n      qualities: getQualities(currentUser.qualities),\n      profession: getProfessionById(currentUser.profession),\n      name: currentUser.name,\n      email: currentUser.email,\n      id: currentUser._id,\n      sex: currentUser.sex\n    }));\n    setIsLoading(false);\n  }, []);\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\"\n      },\n      isEmail: {\n        message: \"Email введен некорректно\"\n      }\n    },\n    name: {\n      isRequired: {\n        message: \"Введите ваше имя\"\n      }\n    }\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n  useEffect(() => {\n    if (data && isLoading) {\n      setIsLoading(false);\n    }\n  }, [data]);\n\n  const handleChange = target => {\n    console.log(target.value);\n    setData(prevState => ({ ...prevState,\n      [target.name]: target.value\n    }));\n    console.log(data);\n  };\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const isValid = Object.keys(errors).length === 0;\n  return !isLoading && Object.keys(qualities).length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(BackHistoryButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-md-3 shadow p-4\",\n        children: !isLoading ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u0418\\u043C\\u044F\",\n            name: \"name\",\n            value: data.name,\n            onChange: handleChange,\n            error: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\",\n            name: \"email\",\n            value: data.email,\n            onChange: handleChange,\n            error: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n            label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0441\\u0432\\u043E\\u044E \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044E\",\n            defaultOption: \"Choose...\",\n            options: professionsList,\n            name: \"profession\",\n            onChange: handleChange,\n            value: data.profession,\n            error: errors.profession\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(RadioField, {\n            options: [{\n              name: \"Male\",\n              value: \"male\"\n            }, {\n              name: \"Female\",\n              value: \"female\"\n            }, {\n              name: \"Other\",\n              value: \"other\"\n            }],\n            value: data.sex,\n            name: \"sex\",\n            onChange: handleChange,\n            label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043F\\u043E\\u043B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(MultiSelectField, {\n            defaultValue: data.qualities,\n            options: transformData(qualities),\n            onChange: handleChange,\n            name: \"qualities\",\n            label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0438 \\u043A\\u0430\\u0447\\u0435\\u0441\\u0442\\u0432\\u0430\"\n          }, data.qualities, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !isValid,\n            className: \"btn btn-primary w-100 mx-auto\",\n            children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this) : \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 7\n  }, this) : \"Loading\";\n};\n\n_s(EditUserPage, \"6ddLt4w4m0DrA4ZRnb67Ker+GTU=\", false, function () {\n  return [useAuth, useHistory, useProfessions, useQualities];\n});\n\n_c = EditUserPage;\nexport default EditUserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUserPage\");","map":{"version":3,"sources":["/Users/dmtrack/Documents/JS/Module 2 React/17 {auth and reg 2}/src/app/components/page/editUserPage/editUserPage.jsx"],"names":["React","useEffect","useState","useHistory","validator","TextField","SelectField","RadioField","MultiSelectField","BackHistoryButton","useAuth","useProfessions","useQualities","EditUserPage","currentUser","editUserData","history","isLoading","setIsLoading","professions","qualities","errors","setErrors","professionsList","map","p","label","name","value","_id","data","setData","email","profession","sex","getQualities","elements","qualitiesArray","elem","quality","push","color","getProfessionById","id","prof","transformData","qual","handleSubmit","e","preventDefault","isValid","validate","newData","q","error","prevState","validatorConfig","isRequired","message","isEmail","handleChange","target","console","log","Object","keys","length"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {validator} from \"../../../utils/validator\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\nimport RadioField from \"../../common/form/radioField\";\nimport MultiSelectField from \"../../common/form/multiSelectField\";\nimport BackHistoryButton from \"../../common/backButton\";\nimport {useAuth} from \"../../../hooks/useAuth\";\nimport {useProfessions} from \"../../../hooks/useProfession\";\nimport {useQualities} from \"../../../hooks/useQualities\";\n\nconst EditUserPage = () => {\n  const {currentUser, editUserData} = useAuth();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const {professions} = useProfessions();\n  const {qualities} = useQualities();\n  const [errors, setErrors] = useState({});\n\n  const professionsList = professions.map((p) => ({\n    label: p.name,\n    value: p._id,\n  }));\n\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    profession: \"\",\n    sex: \"male\",\n    qualities: [],\n  });\n\n  const getQualities = (elements) => {\n    const qualitiesArray = [];\n    for (const elem of elements) {\n      for (const quality in qualities) {\n        if (elem === qualities[quality]._id) {\n          qualitiesArray.push({\n            value: qualities[quality]._id,\n            label: qualities[quality].name,\n            color: qualities[quality].color,\n          });\n        }\n      }\n    }\n    return qualitiesArray;\n  };\n\n  function getProfessionById(id) {\n    for (const prof of professions) {\n      if (prof._id === id) {\n        return prof.name;\n      }\n    }\n  }\n\n  const transformData = (data) => {\n    return data.map((qual) => ({\n      label: qual.name,\n      value: qual._id,\n      color: qual.color,\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    const newData = {\n      ...data,\n      qualities: data.qualities.map((q) => q.value),\n      profession: data.profession,\n    };\n    try {\n      await editUserData(newData);\n      history.push(`/users/${currentUser._id}`);\n    } catch (error) {\n      setErrors(error);\n    }\n  };\n\n  useEffect(() => {\n    setData((prevState) => ({\n      ...prevState,\n      ...data,\n      qualities: getQualities(currentUser.qualities),\n      profession: getProfessionById(currentUser.profession),\n      name: currentUser.name,\n      email: currentUser.email,\n      id: currentUser._id,\n      sex: currentUser.sex,\n    }));\n    setIsLoading(false);\n  }, []);\n\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\",\n      },\n      isEmail: {\n        message: \"Email введен некорректно\",\n      },\n    },\n    name: {\n      isRequired: {\n        message: \"Введите ваше имя\",\n      },\n    },\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n\n  useEffect(() => {\n    if (data && isLoading) {\n      setIsLoading(false);\n    }\n  }, [data]);\n\n  const handleChange = (target) => {\n    console.log(target.value);\n    setData((prevState) => ({\n      ...prevState,\n      [target.name]: target.value,\n    }));\n    console.log(data);\n  };\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const isValid = Object.keys(errors).length === 0;\n  return !isLoading && Object.keys(qualities).length > 0 ? (\n      <div className=\"container mt-5\">\n        <BackHistoryButton/>\n        <div className=\"row\">\n          <div className=\"col-md-6 offset-md-3 shadow p-4\">\n            {!isLoading ? (\n                <form onSubmit={handleSubmit}>\n                  <TextField\n                      label=\"Имя\"\n                      name=\"name\"\n                      value={data.name}\n                      onChange={handleChange}\n                      error={errors.name}\n                  />\n                  <TextField\n                      label=\"Электронная почта\"\n                      name=\"email\"\n                      value={data.email}\n                      onChange={handleChange}\n                      error={errors.email}\n                  />\n\n                  <SelectField\n                      label=\"Выбери свою профессию\"\n                      defaultOption=\"Choose...\"\n                      options={professionsList}\n                      name=\"profession\"\n                      onChange={handleChange}\n                      value={data.profession}\n                      error={errors.profession}\n                  />\n                  <RadioField\n                      options={[\n                        {name: \"Male\", value: \"male\"},\n                        {name: \"Female\", value: \"female\"},\n                        {name: \"Other\", value: \"other\"},\n                      ]}\n                      value={data.sex}\n                      name=\"sex\"\n                      onChange={handleChange}\n                      label=\"Выберите ваш пол\"\n                  />\n                  <MultiSelectField\n                      key={data.qualities}\n                      defaultValue={data.qualities}\n                      options={transformData(qualities)}\n                      onChange={handleChange}\n                      name=\"qualities\"\n                      label=\"Выберите ваши качества\"\n                  />\n                  <button\n                      type=\"submit\"\n                      disabled={!isValid}\n                      className=\"btn btn-primary w-100 mx-auto\"\n                  >\n                    Обновить\n                  </button>\n                </form>\n            ) : (\n                \"Loading...\"\n            )}\n          </div>\n        </div>\n      </div>\n  ) : (\n      \"Loading\"\n  );\n};\nexport default EditUserPage;\n"]},"metadata":{},"sourceType":"module"}