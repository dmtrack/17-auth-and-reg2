{"ast":null,"code":"var _jsxFileName = \"/Users/dmtrack/Desktop/fast-company-before-hw/src/app/components/ui/qualities/qualitiesList.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"./quality\";\nimport { useQualities } from \"../../../hooks/useQualities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QualitiesList = ({\n  qualities\n}) => {\n  _s();\n\n  const {\n    isLoading\n  } = useQualities();\n  if (isLoading) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: qualities.map(qual => /*#__PURE__*/_jsxDEV(Quality, {\n      id: qual\n    }, qual, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n};\n\n_s(QualitiesList, \"HWgY/XMjHLBGbJFDx5wmfd/loN8=\", false, function () {\n  return [useQualities];\n});\n\n_c = QualitiesList;\nQualitiesList.propTypes = {\n  qualities: PropTypes.array\n};\nexport default QualitiesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QualitiesList\");","map":{"version":3,"sources":["/Users/dmtrack/Desktop/fast-company-before-hw/src/app/components/ui/qualities/qualitiesList.jsx"],"names":["React","PropTypes","Quality","useQualities","QualitiesList","qualities","isLoading","map","qual","propTypes","array"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,YAAT,QAA6B,6BAA7B;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAgBH,YAAY,EAAlC;AACA,MAAIG,SAAJ,EAAe,OAAO,YAAP;AACf,sBACI;AAAA,cACKD,SAAS,CAACE,GAAV,CAAeC,IAAD,iBACX,QAAC,OAAD;AAAoB,MAAA,EAAE,EAAEA;AAAxB,OAAcA,IAAd;AAAA;AAAA;AAAA;AAAA,YADH;AADL,mBADJ;AAOH,CAVD;;GAAMJ,a;UACoBD,Y;;;KADpBC,a;AAYNA,aAAa,CAACK,SAAd,GAA0B;AACtBJ,EAAAA,SAAS,EAAEJ,SAAS,CAACS;AADC,CAA1B;AAIA,eAAeN,aAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"./quality\";\nimport { useQualities } from \"../../../hooks/useQualities\";\n\nconst QualitiesList = ({ qualities }) => {\n    const { isLoading } = useQualities();\n    if (isLoading) return \"Loading...\";\n    return (\n        <>\n            {qualities.map((qual) => (\n                <Quality key={qual} id={qual} />\n            ))}\n        </>\n    );\n};\n\nQualitiesList.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n"]},"metadata":{},"sourceType":"module"}